Bzoj4558:分类讨论 计算几何 组合数学

这题让我爆肝啦......
这种计数显然容斥，正好不含任何坏点的我们不会算，但是我们能算至少含零个坏点的，至少含一个坏点的，至少含两个坏点的......
所以最终的答案就是(至少含零个坏点的-至少含一个坏点的+至少含两个坏点的-至少含三个坏点的+至少含四个坏点的)。
然后就是怎么计算的问题。
对于至少含零个坏点的，我们不妨设定所有点都是好点。
对于非正放的正方形，我们能找到一个正好包含它的最小的正放的正方形，显然这样的正方形是唯一的。
然后我们让四个点在这个正方形的边上滑动，显然这四个点的每一组位置对应一个非正放的正方形(虽然正好在四个角上的是正放的)。
于是我们可以得出总方案数为sigma( i from 1 to min(n,m) ) i * ( n - i + 1 ) * ( m - i + 1 ) 。
这个东西可以O(n)计算。

对于正好有一个坏点的，我们考虑某个以某个个点P为角的正方形A，点P一定包含这个正方形A的最小正放正方形的角上或边上。
于是我们枚举这样的正方形和点P能在的位置数量就好了。
对于点P的状态，我们计算出它距离左边界的距离l，右边界距离r，上边界距离h。
然后我们令t=min(l+r,h)。
如果我们不考虑有一些位置不能取到的话，答案应该为t*(t+3)/2。
然而这样计算了一些不能取到的位置。当t>l时，我们多计算的位置数量为(t-l)*(t-l+1)/2。(手玩一下就明白了)
t>r时同理。这样我们就能O(k)计算出至少含一个坏点的方案数。

对于正好含两及以上个坏点的，我们枚举两个坏点，显然一个正方形给你两个点，他的位置就基本确定了。
我们可以分类讨论三种情况，用向量计算出另外两个点应该在的位置。注意某些情况下以这两个点为对角线的正方形可能不在格点上。
然后对于含两个的，我们直接计算可行的正方形数；对于含三个的，我们当另外两个点有一个为坏点时计算；含四个的，我们当另外两个点均为坏点时计算。
显然含三个和含四个的我们算重了。所以应该分别除以C(3,2)和C(4,2)。

然后累加一下答案就好。
(然而计算垂直向量时没有加负号让我调了半天，老年选手身败名裂)
代码:
```cpp

```
