线性代数:

矩阵:
定义。
矩阵的运算(加法，乘法)。
矩阵运算是一个群。
单位矩阵，逆矩阵，矩阵求逆(A和I一起消元)。

NOI2013:
对于k=2,判断是否有0->判断是否全1，然后就能判断是否有解。如果有解，先暴力找i，再暴力找j。
对于k=3，让它平方一下，这样因为1和2在mod 3下都同构于1，然后可做。
我们把长度为d的向量扩充为长度为d^2的向量然后套用k=2的做法。

行列式:
性质:转置，求逆，乘积。
A可逆当且仅当|A|!=0。
行列式为0意味着矩阵不是线性无关的。

CC:
给出一个全黑的排列。
明显给行列式判断正负还是0。
使用可并堆优化消元，按照左端点排序，找长度最小的消其他的。
相当于把整个堆扔到了t+1的堆里。我们最后得到一个排列，求这个排列的逆序对数就是行列式正负(我们可以重排排列为上三角，逆序对数是我们的交换次数)。
CC:
循环节不超过p^2。矩阵BSGS求循环节。
y=0的时候直接暴力求循环节，否则矩阵可逆。
对于C，预处理psqrt(p)次方，枚举sqrt(p)次方，如果在前面的找到，则能找两个状态转移的距离。
显然循环节内每两个状态只能转移一次，这样即可求出位置。
CC:
我们给矩阵每个元素+1，这样奇数变成偶数。存在偶数可做。
暴力+1不好做，我们能给每个矩阵加上一个全1的列。（看不懂题.jpg，似乎课件有错）

行列式与线性方程组:
线性方程组有唯一解当且仅当|A|!=0。
解方程方法就是高斯消元，或者克拉默法则。

奇怪的题目:
我们能逆向使用克拉默法则。
我们用消a的方法消p，解出方程，用x和原行列式求出替换后的行列式。

Laplacian Matrix:
度数减去邻接。
矩阵树定理:
无向图的生成树数目等于任意主子式。
某多校题:
爆搜一个环，状压DP方案，缩环然后求生成树数目。
生成树求和加强版:
每位单独算。用单位根的乘法模拟质数加法。
求出答案为Q+sqrt(-3)Q的形式，得到:
w3^0C0+w3^1C1+W3^2c2=Q+sqrt(-3)Q
C0+C1+C2=生成树个数。
这里有三个方程，然后解方程即可。
最小生成树计数:
每组权值出现边次数相等，我们按照边权分步，显然每步是小边权边的联通块被大边权边连起来，分步计算即可。
SRM551:
容斥+生成树求出恰好k个真甜，方案数。
然后折半爆搜真甜的集合，乘上预处理的方案数？(回去看课件)

矩阵的秩:
定义等。
向量空间和线性基:
初等行列变换不改变矩阵行向量组的向量空间。
WC2011:
返祖边的环加入线性基即可。
清华集训2014:
k=1全都or一遍，k=2的话枚举两位贡献，k=345直接爆搜。

线性基是拟阵。
拟阵的核心就是我们加入一个向量能替换出一个向量，大小不变。
幸运数字:
不要树剖暴力了......
倍增st表合并的话，查询的时候要合并O(1)次。

向量的范数与正交性:
定义。
向量是正交的意味着两个向量的内积为0，就是两个向量垂直。
特征值与特征向量。
二分图的矩阵有一个特征值为-1。
(其实没什么用.jpg)
特征多项式:
f(lambda)=|A-lambdaI|。
f(A)=0。
矩阵的迹:
主对角线上元素之和。
矩阵的迹等于其特征向量之和。
CC:
若干步回到原点:邻接矩阵k次方的迹。
强乘积图:把点做一个直积(原来的点集相当于新图中一个点)。
容斥推出多个强乘积图的迹。
预处理？可以BSGS，也可以特征多项式求解，然后每项算出来进行卷积。
(这种题意义何在.jpg)

矩阵的对角化:
A=VDV^-1的形式，保证D是个对角矩阵。
矩阵的SvT分解:n*n的矩阵能拆成n*d的矩阵乘d*n的矩阵。
相似矩阵:
定义。

IOI2016aliens:
暴力25分，决策单调性60分或者斜率优化，然后这种DP显然可以wqs二分(显然它关于k是凸的)，然后可AC。


提交答案题：
观察数据型:
NOI2014消除数据:
胡乱搜就有40-50分。
观察数据？手写一个random maker，和他的数据压缩，比较压缩包大小差别，如果差别大的话基本上他的数据是构造的。
NOI2013小Q的修炼:
观察数据性质，背包什么的。
UR9包子晚宴:
观察奇怪的性质......
一般观察数据型得分和时间成正比。
构造近似型:
这种差出来的分比较大。
写点暴力随机，找相对靠谱方案。
造计算机型:
自行搞一搞就好了。
人类智慧型:
只有弃疗了......
尺规作图:
暴力找基础操作的做法，然后拼接。
诡异的文本处理:
补全自动机。
手动娱乐型:
可读性强的可以手玩。
构造输入型:
考察对算法的理解。
卡SPFS:
建立网格图，边权随机，把某些边调小。
卡SLF？在边中间插一些点。
奇怪优化：造分层图，短层随机边，远层正比于距离但略大的边。
如果看不出规律？要早点写暴力。
如果长时间有效果？早点写，早点跑。
对于NOI的bug，如果更优则更新，这样能在考完后接着跑！(现在可能不禁止__pbds了)。
著名选手记得更换哈希模数。

莫比乌斯反演:
杜教筛，用来求积性函数的前缀和。

UR数据结构选讲:
UR #8:
脑补一下大概是个反比例函数的样子，c=0的时候直接维护凸包。
这题我们可以KDTree，按照X轴建立KDTree,然后先递归右边再递归左边。
期望复杂度一个log。
UR #11:
区间维护最小值，次小值，最小值数目。
如果介于两者之间，改掉最小值。否则向两边递归。势能函数为一个区间内不同的数的数目，这东西告诉你它是nlog^2n。
没办法卡到比nlogn更慢。
Goodbye Yiwei:
合并不好做，我们能从上面进行分解。
S为我们分解出的集合，T为我们存在的集合。S-b1<T，则S中的集合谁也不能再通过分解匹配T，那么让T和S中可行的最小的配对。
如果S-b1>T，假设S和Tk配，那么我们也能分出来再配，显然分掉比较优。
如果T中没有元素则完成，如果S中没有元素则GG了。
UR #13:
单调栈+凸包优化DP。
集训队互测 2016:
仙人掌链剖分。
重链和仙人掌环的交点为1类节点，在环上经过的点2为2类节点，其余的为3类节点。
对三种点分别树剖，三种点依旧能分成logn种区间。
集训队互测 2016:
线段树延迟维护(类似vector)的科技可过。
我们先建立操作树，每个点存在于一个联通块中，可以外围排序+线段树凸包。
正解？操作树，树分治，考虑过中心的区间，用维护整体凸包的科技去维护它，然而两个log。
或者考虑前缀，成为链上凸包。询问和凸包分别排序，复杂度nlog^2n。
延迟重构能用外围排序优化为nlogn的。
加上的题目:
对询问分块，定期重构。
UR #16:
一条直线的角度范围。
看是否存在一个没有被包起来的方向:>上一条+180,<下一条直线。
看能包住的角度之差是否超过pi。
UR #16:
对每个东西分块，对三条线维护一边的数量，旋转坐标移动区间，然后bitset求。
我们还能用三角形的梯形划分求解。
UNR #1:
区间压栈，可持久化平衡树维护lazy标记的栈，然而并不能AC。
可持久化线段树，维护栈顶元素和加入时间，弹出的话只需要找前一个是谁。
UNR #2:
钦定每个点为所在点少的行或者列的关键点。
我们对每行每列维护非关键点的标记，暴力所有关键点，通过行关键点查询列标记；然后对列关键点打标记。
合并用并查集维护集合的相对差标记，当行关键点超过阈值的时候暴力关键点重构。
对于重复点，超过阈值的时候重构。(为防止线性重构成为瓶颈，必须写阈值)
