Bzoj2534:后缀自动机 主席树启发式合并

国际惯例的题面:

考虑我们求解出字符串uvu第一个u的右端点为i，第二个u的右端点为j，我们需要满足什么性质？
显然j>i+L，因为我们选择的串不能是空串。
另外考虑i和j的最长公共前缀(也就是说其parent树上lca的len)，为了保证他们相同，我们需要:
j-len>=i-L。
整理一下，如果我们已知i，j需要在区间[i+L+1,i+L+len]中。
如果我们已知j，i需要在区间[j-L-len,j-L-1]中。
于是我们可以写n^2暴力了:暴力维护parent上每个节点的right集合，对于每个i，暴力向上跳，暴力找可行的j。
然后我们发现，维护right集合可以用主席树启发式合并做，对于计算贡献，我们可以先枚举lca，然后计算有多少组可行的i，j。
在第二个计算的时候，我们显然是会在两颗主席树进行合并的时候进行计算，于是我们可以把较小的那颗拍扁，在另外一棵里暴力查询每一个值的贡献。
这样总复杂度O(nlog^2n)，轻松AC。
注意主席树启发式合并的时间和空间复杂度都是O(nlog^n)的，因为考虑每层摊还下来只会被新建logn次(我已经把长度和节点个数乘起来了)。
另外这题字符集大小为全体可见字符，所以需要用map存后缀自动机。
(不是很明白为什么网上那么多题解都是后缀数组的，明明后缀自动机这么好写(不会后缀数组的就不要说话了.jpg))

代码:
