20180417小测

你说我怎么这么菜啊......
今天又是考试，然而早晨7:30考到中午12:30，没时间吃饭了。
然而并不会做题啊啊啊。

T1:

系数显然是组合数啊......
然后，模数不是质数？这不是拓展lucas裸题吗？
等等，拓展lucas，我只写过一遍诶......
看我大力出奇迹:
就是把模数先分解成p1^k1*p2^k2...的形式，然后我们在mod px^kx的情况下进行计算，最后再用互质的CRT合并即可。
mod px^kx的情况下怎么算？我们能把与px互质的阶乘计算出来，再单独计算阶乘中有px的多少次方。
然后互质的直接在mod px^kx下求逆元即可，非互质的直接次数加减。
然而考场上被卡常只有90......
代码:


T2:

神题!
考虑暴力怎么写，我们能两遍dfs求出每个人到达每个点的时间。
然后我们可以求两个人在多少个点上相遇。
如果再且仅在一个点上相遇，显然不可能在边上相遇了。
如果相遇的点大于一个，则这两个人显然一起走了一条边。
这样就把在点上相遇的情况解决了。
考虑两个人经过每一条边的时间区间，如果两个人的时间区间在这条边上有交集，在可能在这条边上相遇。
然后考虑两个人的方向，如果行走方向相反的话，一定相遇；如果方向相同的话，当且仅当两个人之间的距离小于边长才会在这条边上相遇。
于是你成功get到了40分。
考虑怎么优化暴力。
我们钦定一个根，然后处理出每个点到根的距离dis。
因为树上路径唯一，所以我们可以把两个人到达每个点的时间化为一个关于dis的函数：timei=k*disi+b。
我们用树链剖分+线段树维护这个函数。
考虑树上每一条链，我们可以O(log)地求出两个人在这条链上停留的时间区间。
然后我们可以通过这条链的两个函数计算出两个人是否在点上相遇，是否在边上同向相遇，是否在边上逆向相遇。
想想就细节很多啊......
我的写法是先求出两个人在多少个点上相遇，判定是否有解。
然后计算两个人能否在边上相遇，显然这时候两个人不可能在点上相遇了，会多一些条件。
提醒几点细节:
虚边可能更新答案(在虚边上相遇)，LCA的函数斜率不要设置为+-1，要设置为0，否则判定相遇方向时存在问题。
线段树上需要另外维护一下区间最长边来解决同方向相遇的情况，查询区间lr相同是没有边的，不可能在这种区间相遇。
考场上写挂了只有30，不如暴力......
改了不知道多久后改对了(这10kb代码是什么鬼)。
代码:

T3:

题答题弃坑啦!